<UserControl x:Class="Chroma.FuelCell.GatewayConnector.ModbusTCPWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Chroma.FuelCell.GatewayConnector"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Height="800" Width="1100">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="400"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <StackPanel Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,5">
            <TextBox Height="30" Width="150" Margin="0,0,20,0" HorizontalAlignment="Left" VerticalContentAlignment="Center" Text="{Binding IPAddr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            <Label VerticalContentAlignment="Center" Content="Port: "/>
            <TextBox Height="30" Width="50" Margin="0,0,20,0" HorizontalAlignment="Left" VerticalContentAlignment="Center" Text="{Binding TCPPort,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            <Button Content="Connect" Margin="0,0,20,0" Command="{Binding ConnectModbusGatewayCommand}" IsEnabled="{Binding IsConnectModbusGatewayCommand}"/>
            <Button Content="Disconnect" Visibility="{Binding IsShowSettingInfos}" Margin="0,0,20,0" Command="{Binding DisconnectModbusGatewayCommand}" IsEnabled="{Binding}"/>
            <Button Content="Read" Visibility="{Binding IsShowSettingInfos}" Margin="0,0,20,0" Command="{Binding ReadTagDataCommand}" IsEnabled="{Binding IsReadTagDataCommand}"/>
            <Button Content="Write" Visibility="{Binding IsShowSettingInfos}" Margin="0,0,20,0" Command="{Binding WriteTagDataCommand}" IsEnabled="{Binding IsWriteTagDataCommand}"/>
            <Button Content="Import CSV Tag" Visibility="{Binding IsShowSettingInfos}" Command="{Binding ImportCSVTagCommand}" IsEnabled="{Binding}"/>
        </StackPanel>
        <TextBox Grid.Row="1" Height="30" Width="150" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Text="{Binding a}"/>
        <TextBox Grid.Row="2" Height="30" Width="150" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Text="{Binding a}"/>
        <TextBox Grid.Row="3" Height="30" Width="150" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Text="{Binding a}"/>
        <ComboBox Grid.Row="4" Name="cb" VerticalAlignment="Center" Height="30" 
                  ItemsSource="{Binding Path=TagTypeList}"
                  SelectedItem="{Binding Path=TagTypeSelected}" />
        
        <!--<TextBox Grid.Row="4" Height="30" Width="150" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" VerticalContentAlignment="Center" Text="{Binding a}"/>-->
        <!--<TextBox Grid.Row="5" Height="390" Width="1100" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" VerticalContentAlignment="Center" Text="{Binding a}"/>-->
        <StackPanel Grid.Row="5" Visibility="{Binding IsShowSettingInfos}" VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,5">
            <Canvas Grid.ColumnSpan="1" x:Name="DataGridCanvas1" Height="389" Width="236">
                <StackPanel Grid.Row="5" VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Vertical">
                    <Label VerticalContentAlignment="Center" Content="Coil: "/>
                    <DataGrid x:Name="CoilTagsDataGrid" SelectionMode="Extended" 
                          MaxWidth="{Binding ElementName=DataGridCanvas1,Path=ActualWidth}" Width="{Binding ElementName=DataGridCanvas1,Path=ActualWidth}" 
                          Height="357" 
                          ItemsSource="{Binding CoilDataList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding}"
                          SelectedItem="{Binding CoilDataModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="TagSelect">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" ClickMode="Press"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header=" Count. " Binding="{Binding TagCount}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Address. " Binding="{Binding Address}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Value. " Binding="{Binding Value}" IsReadOnly="False"/>
                            <!--<DataGridTextColumn Header=" DataType. " Binding="{Binding ParaIdx}" IsReadOnly="True"/>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Canvas>
            <Canvas Grid.ColumnSpan="1" x:Name="DataGridCanvas2" Height="389" Width="236" Margin="5,0,0,0">
                <StackPanel Grid.Row="5" VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Vertical">
                    <Label VerticalContentAlignment="Center" Content="Discrete input: "/>
                    <DataGrid x:Name="DiscreteInputTagsDataGrid" SelectionMode="Extended" 
                          MaxWidth="{Binding ElementName=DataGridCanvas2,Path=ActualWidth}" Width="{Binding ElementName=DataGridCanvas2,Path=ActualWidth}" 
                          Height="357" 
                          ItemsSource="{Binding DiscreteInputDataList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding}"
                          SelectedItem="{Binding DiscreteInputDataModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header=" Count. " Binding="{Binding TagCount}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Address. " Binding="{Binding Address}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Value. " Binding="{Binding Value}" IsReadOnly="False"/>
                            <!--<DataGridTextColumn Header=" DataType. " Binding="{Binding ParaIdx}" IsReadOnly="True"/>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Canvas>
            <Canvas Grid.ColumnSpan="1" x:Name="DataGridCanvas3" Height="389" Width="236" Margin="5,0,0,0">
                <StackPanel Grid.Row="5" VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Vertical">
                    <Label VerticalContentAlignment="Center" Content="Holding register: "/>
                    <DataGrid x:Name="HoldingRegisterTagsDataGrid" SelectionMode="Extended"
                          MaxWidth="{Binding ElementName=DataGridCanvas3,Path=ActualWidth}" Width="236" 
                          Height="357" 
                          ItemsSource="{Binding HoldingRegisterDataList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding}"
                          SelectedItem="{Binding HoldingRegisterDataModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="TagSelect">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" ClickMode="Press"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header=" Count. " Binding="{Binding TagCount}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Address. " Binding="{Binding Address}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Value. " Binding="{Binding Value}" IsReadOnly="False"/>
                            <!--<DataGridTextColumn Header=" DataType. " Binding="{Binding ParaIdx}" IsReadOnly="True"/>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Canvas>
            <Canvas Grid.ColumnSpan="1" x:Name="DataGridCanvas4" Height="389" Width="236" Margin="5,0,0,0">
                <StackPanel Grid.Row="5" VerticalAlignment="Top" HorizontalAlignment="Left" Orientation="Vertical">
                    <Label VerticalContentAlignment="Center" Content="Input register: "/>
                    <DataGrid x:Name="InputRegisterTagsDataGrid" SelectionMode="Extended" 
                          MaxWidth="{Binding ElementName=DataGridCanvas4,Path=ActualWidth}" Width="{Binding ActualWidth, ElementName=DataGridCanvas4, Mode=OneWay}" 
                          Height="357" 
                          ItemsSource="{Binding InputRegisterDataList,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding}"
                          SelectedItem="{Binding InputRegisterDataModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header=" Count. " Binding="{Binding TagCount}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Address. " Binding="{Binding Address}" IsReadOnly="True"/>
                            <DataGridTextColumn Header=" Value. " Binding="{Binding Value}" IsReadOnly="False"/>
                            <!--<DataGridTextColumn Header=" DataType. " Binding="{Binding ParaIdx}" IsReadOnly="True"/>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Canvas>
        </StackPanel>
            
        <!--<TextBox Grid.Row="6" Height="190" Width="1100" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" VerticalContentAlignment="Center" Text="{Binding a}"/>-->
        <local:AutoScrollListBox Grid.Row="6" Height="190" Width="1100" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Stretch" 
                                 ItemsSource="{Binding LogData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"            
                                 SelectionMode="Single"
                                 SelectedItem="{Binding SelectedlogData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                 ScrollViewer.IsDeferredScrollingEnabled="True"
                                 x:Name="listbox">

        </local:AutoScrollListBox>
    </Grid>

    <i:Interaction.Behaviors>
        <local:ModbusTCPWindowBehavior/>
    </i:Interaction.Behaviors>
    
</UserControl>
